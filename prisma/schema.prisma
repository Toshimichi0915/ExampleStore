datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String     @id @default(cuid())
  name     String     @unique
  password String
  roles    UserRole[]

  @@map("users")
}

enum UserRole {
  ADMIN @map("admin")

  @@map("user_roles")
}

model Product {
  id              String       @id @default(cuid())
  name            String
  price           Int
  type            ProductType? @relation(fields: [typeId], references: [name], onDelete: SetNull, onUpdate: Cascade)
  typeId          String?      @map("type")
  content         String
  unswappable     Boolean      @default(false) @map("unswappable")
  hasOriginalMail Boolean      @default(false) @map("has_original_mail")
  note            String?
  charges         Charge[]
  createdAt       DateTime     @default(now()) @map("created_at")
  updatedAt       DateTime     @updatedAt @map("updated_at")

  @@map("shop_items")
}

model ProductType {
  name      String    @id @unique
  shopItems Product[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  weight    Int?      @unique @default(autoincrement())

  @@map("shop_item_types")
}

model Charge {
  id         String       @id @default(cuid())
  status     ChargeStatus @default(INITIALIZING)
  product    Product      @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  productId  String       @map("product")
  coinbaseId String?      @unique @map("coinbase_id")
  chargeUrl  String?      @map("charge_url")
  userId     String
  createdAt  DateTime     @default(now()) @map("created_at")
  updatedAt  DateTime     @updatedAt @map("updated_at")

  @@map("charges")
}

enum ChargeStatus {
  INITIALIZING @map("initializing")
  CREATED      @map("created")
  CONFIRMED    @map("confirmed")
  FAILED       @map("failed")
  DELAYED      @map("delayed")
  PENDING      @map("pending")
  RESOLVED     @map("resolved")
  INVALIDATED  @map("invalidated")

  @@map("charge_status")
}

model Environment {
  id             String  @id @default("_")
  channelUrl     String  @default("https://example.com") @map("channel_url")
  email          String  @default("test@example.com") @map("email")
  campaign       String? @map("campaign")
  termsOfService Json?   @map("terms_of_service")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("environment")
}
